# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.contents_dir:
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $projectDir: '%kernel.project_dir%'
            $environment: '%env(APP_ENV)%'
            $elasticIndex: 'got-%env(APP_ENV)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Domain/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    Elastic\Elasticsearch\Client:
        factory: ['App\Infrastructure\Persistence\Elasticsearch\ClientFactory', 'create']
        arguments:
          $hosts: '%env(ELASTICSEARCH_HOSTS)%'
          $caBundle: '%env(ELASTIC_CA_DIR)%'
          $password: '%env(ELASTIC_PASSWORD)%'

    App\Domain\Character\Repository\CharacterRepositoryInterface:
        alias: 'App\Infrastructure\Persistence\Doctrine\Repository\CharacterRepository'

    App\Domain\Actor\Repository\ActorRepositoryInterface:
        alias: 'App\Infrastructure\Persistence\Doctrine\Repository\ActorRepository'
